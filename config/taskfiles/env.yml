version: "3"

vars:
  SCRIPTS_DIR: config/scripts/env

tasks:
  generate:
    desc: >
      Create .env from .env.example. Define ENV_TYPE in the command line to set the environment type (dev or prod).
    vars:
      DEV_MYSQL_DATABASE: app
      DEV_MYSQL_USER: user
      DEV_MYSQL_PASSWORD: password
      DEV_MYSQL_ROOT_PASSWORD: rootpassword
      DEV_CLIENT_URL: https://localhost
      DEV_API_URL: https://api.localhost
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      ENV_TYPE: "{{.ENV_TYPE}}"
      DEV_MYSQL_DATABASE: "{{.DEV_MYSQL_DATABASE}}"
      DEV_MYSQL_USER: "{{.DEV_MYSQL_USER}}"
      DEV_MYSQL_PASSWORD: "{{.DEV_MYSQL_PASSWORD}}"
      DEV_MYSQL_ROOT_PASSWORD: "{{.DEV_MYSQL_ROOT_PASSWORD}}"
      DEV_CLIENT_URL: "{{.DEV_CLIENT_URL}}"
      DEV_API_URL: "{{.DEV_API_URL}}"
    cmds:
      - sh {{.SCRIPTS_DIR}}/generate.sh

  init:
    desc: >
      Create .env from .env.example and generate DATABASE_URL and APP_SECRET. Define ENV_TYPE in the command line to set the environment type (dev or prod).
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
      JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
      JWT_TOKEN_LIFETIME: 3600
    vars:
      JWT_SECRET_KEY: "{{.JWT_SECRET_KEY}}"
      JWT_PUBLIC_KEY: "{{.JWT_PUBLIC_KEY}}"
      JWT_TOKEN_LIFETIME: "{{.JWT_TOKEN_LIFETIME}}"
    cmds:
      - sh {{.SCRIPTS_DIR}}/generate-secret.sh
      - sh {{.SCRIPTS_DIR}}/generate-db-url.sh
      - sh {{.SCRIPTS_DIR}}/generate-jwt-keys.sh

  init:dev:
    desc: >
      Create .env from .env.example and generate DATABASE_URL and APP_SECRET for development.
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
      JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
      JWT_TOKEN_LIFETIME: 3600
    cmds:
      - task: generate
        vars:
          ENV_TYPE: dev
      - task: generate:db-url
      - task: generate:app-secret
      - task: init:jwt
      - task: generate:client-env

  generate:app-secret:
    desc: Generate and add APP_SECRET to .env if missing
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
    cmds:
      - sh {{.SCRIPTS_DIR}}/generate-secret.sh

  generate:db-url:
    desc: Generate and add DATABASE_URL to .env file using MYSQL_* vars from .env
    vars:
      DOCKER_DB_HOST: mysql
      DOCKER_DB_PORT: 3306
      DB_SERVER_VERSION: 8.0
      DB_CHARSET: utf8mb4
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      DOCKER_DB_HOST: "{{.DOCKER_DB_HOST}}"
      DOCKER_DB_PORT: "{{.DOCKER_DB_PORT}}"
      DB_SERVER_VERSION: "{{.DB_SERVER_VERSION}}"
      DB_CHARSET: "{{.DB_CHARSET}}"
    cmds:
      - sh {{.SCRIPTS_DIR}}/generate-db-url.sh

  init:jwt:
    desc: Generate JWT keys and passphrase
    cmds:
      - task: generate:jwt-keys
      - task: generate:jwt-passphrase

  generate:client-env:
    desc: Generate .env for React frontend
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      CLIENT_ENV_VARS: "{{.CLIENT_ENV_VARS}}"
    vars:
      CLIENT_ENV_VARS: "API_URL CLIENT_URL"
    cmds:
      - |
        bash {{.SCRIPTS_DIR}}/generate-client-env.sh {{.CLI_ARGS}}

  generate:jwt-passphrase:
    desc: Generate JWT passphrase
    cmds:
      - |
        PASS=$(openssl rand -hex 32) && sed -i "s|^JWT_PASSPHRASE=.*$|JWT_PASSPHRASE=$PASS|" .env
    silent: true

  generate:jwt-keys:
    desc: Generate JWT keys
    env:
      ROOT_DIR: "{{.ROOT_DIR}}"
      JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
      JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
      JWT_TOKEN_LIFETIME: 3600
    vars:
      JWT_SECRET_KEY: "{{.JWT_SECRET_KEY}}"
      JWT_PUBLIC_KEY: "{{.JWT_PUBLIC_KEY}}"
      JWT_TOKEN_LIFETIME: "{{.JWT_TOKEN_LIFETIME}}"
    cmds:
      - sh {{.SCRIPTS_DIR}}/generate-jwt-keys.sh
    silent: true

  show:urls:
    desc: Show the current URL environment variables values
    dotenv:
      - .env
    cmds:
      - |
        echo "Symfony API (PHP): ${API_URL}"
        echo "React Frontend (Node): ${CLIENT_URL}"
    silent: true

  show:mysql:
    aliases:
      - show:db
      - show:database
    desc: Show the current MySQL environment variables values
    dotenv:
      - .env
    cmds:
      - |
        echo "MySQL Database: ${MYSQL_DATABASE}"
        echo "MySQL User: ${MYSQL_USER}"
        echo "MySQL Password: ${MYSQL_PASSWORD}"
        echo "MySQL Root Password: ${MYSQL_ROOT_PASSWORD}"
        echo "Database URL: ${DATABASE_URL}"
    silent: true
