services:
  deno:
    container_name: deno
    env_file: .env
    build:
      context: .
      dockerfile: docker/deno/Dockerfile
    volumes:
      - ./app/client:/app
    networks:
      - app-network

  php:
    container_name: php
    env_file: .env
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: dev
    volumes:
      - ./app/api:/app
    depends_on:
      - mysql
    networks:
      - app-network
      - database-network

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    env_file: .env
    environment:
      - API_URL=${API_URL:-api.localhost}
      - CLIENT_URL=${CLIENT_URL:-localhost}
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./app/api:/app
    depends_on:
      - deno
      - php
    networks:
      - app-network

  mysql:
    image: mysql:8.4
    restart: unless-stopped
    container_name: mysql
    env_file: .env
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - database:/var/lib/mysql
    networks:
      - database-network

networks:
  app-network:
    driver: bridge
  database-network:
    driver: bridge

volumes:
  database:
